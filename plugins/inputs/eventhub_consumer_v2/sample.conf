# Azure Event Hubs service input plugin v2
[[inputs.eventhub_consumer_v2]]

  ## The connection string used to connect to the Event Hub.
  ## It should should contain the Event Hub name.
  eventhub_connection_string = ""

  ## The consumer group of the Event Hub that should be used.
  # eventhub_consumer_group = "$Default"

  ## The connection string of the Azure Storage Account used to store the
  ## Event Hub checkpoints.
  checkpoint_connection_string = ""

  ## The name of the container in the Azure Storage Account used to store the
  ## Event Hub checkpoints. The container should already exist.
  checkpoint_container_name = ""

  ## The number of events to prefetch from the Event Hub asynchronously.
  ## This reduces the likelihood of having to wait for more events to arrive
  ## from the network.
  # prefetch_size = 300

  ## The amount of time that is waited during each read from the Event Hub
  ## before processing the batch.
  # batch_interval = "1s"

  ## The maximum amount of messages that are read and processed from the
  ## Event Hub in each batch. In most situations, this should be equal or
  ## smaller than prefetch_size.
  # batch_size = 100

  ## Max undelivered batches
  ## This plugin uses tracking metrics, which ensure messages are read to
  ## outputs before updating the partition checkpoints to ensure data is not
  ## lost. This option sets the maximum number of batches to read from the
  ## broker that have not been written by an output.
  ##
  ## This value needs to be picked with awareness of the agent's
  ## metric_batch_size value as well. Setting max undelivered batches too high
  ## can result in a constant stream of data batches to the output. While
  ## setting it too low may never flush the metric batches.
  # max_undelivered_batches = 1000

  ## Set either option below to true to use a system property as timestamp.
  ## You have the choice between EnqueuedTime and IoTHubEnqueuedTime.
  ## It's recommended to use this setting when the data itself has no timestamp.
  # enqueued_time_as_ts = true
  # iot_hub_enqueued_time_as_ts = true

  ## Tags or fields to create from keys present in the application property bag.
  ## These could for example be set by message enrichments in Azure IoT Hub.
  # property_tags = []
  # property_fields = []

  ## Tag or field name to use for metadata.
  ## By default all metadata is disabled.
  # sequence_number_field = "SequenceNumber"
  # offset_field = "Offset"
  # enqueued_time_field = "EnqueuedTime"
  # iot_hub_enqueued_time_field = "IoTHubEnqueuedTime"
  # iot_hub_connection_device_id_tag = "IoTHubConnectionDeviceID"
  # iot_hub_auth_generation_id_tag = "IoTHubAuthGenerationID"
  # iot_hub_connection_auth_method_tag = "IoTHubConnectionAuthMethod"
  # iot_hub_connection_module_id_tag = "IoTHubConnectionModuleID"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "influx"